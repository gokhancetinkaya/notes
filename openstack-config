SETUP NETWORK
openstack network create --external --provider-network-type flat --provider-physical-network physnet1 ext_net

openstack subnet create --network ext_net --no-dhcp --gateway 172.27.99.254 --subnet-range 172.27.98.0/23 --allocation-pool start=172.27.99.101,end=172.27.99.200 ext_subnet

openstack network create int_net

openstack subnet create --network int_net --dns-nameserver 172.27.99.254 --gateway 192.168.123.1 --subnet-range 192.168.123.0/24 --allocation-pool start=192.168.123.2,end=192.168.123.254 int_subnet

openstack router create provider-router

openstack router set --external-gateway ext_net provider-router

openstack router add subnet provider-router int_subnet

IMPORT IMAGE
mkdir -p ~/ob96-demos/openstack/cloud-images
curl https://github.com/cirros-dev/cirros/releases/download/0.6.1/cirros-0.6.1-x86_64-disk.img --output ~/ob96-demos/openstack/cloud-images/cirros.img
openstack image create --public --container-format bare --disk-format qcow2 --file ~/ob96-demos/openstack/cloud-images/cirros.img cirros

CREATE FLAVOR
openstack flavor create --ram 512 --disk 5 --ephemeral 10 m1.teeny

IMPORT SSH KEYPAIR
mkdir -p ~/ob96-demos/openstack/cloud-keys
ssh-keygen -q -N '' -f ~/ob96-demos/openstack/cloud-keys/id_mykey
openstack keypair create --public-key ~/ob96-demos/openstack/cloud-keys/id_mykey.pub mykey

CONFIGURE SECURITY GROUPS
for i in $(openstack security group list | awk '/default/{ print $2 }'); do
openstack security group rule create $i --protocol icmp --remote-ip 0.0.0.0/0;
openstack security group rule create $i --protocol tcp --remote-ip 0.0.0.0/0 --dst-port 22;
done

CREATE INSTANCE
openstack server create --image cirros --flavor m1.teeny --key-name mykey --network int_net cirros-1

ASSIGN FLOATING IP
FLOATING_IP=$(openstack floating ip create -f value -c floating_ip_address ext_net)
openstack server add floating ip cirros-1 $FLOATING_IP

LOG INTO INSTANCE
ssh -i ~/ob96-demos/openstack/cloud-keys/id_mykey ubuntu@$FLOATING_IP

ACCESS DASHBOARD
juju status --format=yaml openstack-dashboard | grep public-address | awk '{print $2}' | head -1

Get password:
juju exec --unit keystone/leader leader-get admin_passwd

https://IP/horizon
admin
password
admin_domain
